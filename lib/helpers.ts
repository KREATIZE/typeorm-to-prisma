export const postgresToPrismaTypeMapping = {
  text: 'String',
  char: 'String',
  varchar: 'String',
  bit: 'String',
  varbit: 'String',
  uuid: 'String',
  xml: 'String',
  inet: 'String',
  citext: 'String',
  'character varying': 'String',
  boolean: 'Boolean',
  integer: 'Int',
  int: 'Int',
  int4: 'Int',
  smallint: 'Int',
  int2: 'Int',
  smallserial: 'Int',
  serial2: 'Int',
  serial: 'Int',
  serial4: 'Int',
  oid: 'Int',
  bigint: 'BigInt',
  int8: 'BigInt',
  bigserial: 'BigInt',
  serial8: 'BigInt',
  'double precision': 'Float',
  real: 'Float',
  decimal: 'Decimal',
  numeric: 'Decimal',
  money: 'Decimal',
  'timestamp with time zone': 'DateTime',
  timestamp: 'DateTime',
  timestamptz: 'DateTime',
  datetime: 'DateTime',
  date: 'DateTime',
  time: 'DateTime',
  timetz: 'DateTime',
  json: 'Json',
  jsonb: 'Json',
  bytea: 'Bytes',
  'Unsupported("ViewColumn")': 'Unsupported("ViewColumn")'
}

export const generateBlankSpaces = (longestLength: number, currentLength: number): string => {
  return Array.from(Array(longestLength - currentLength + 4).keys()).map(() => ' ').join('')
}